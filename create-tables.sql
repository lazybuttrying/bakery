-- MySQL Script generated by MySQL Workbench
-- Fri Nov 12 18:06:27 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema bda
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema bda
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bda` DEFAULT CHARACTER SET utf8 ;
USE `bda` ;

-- -----------------------------------------------------
-- Table `bda`.`delivery`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bda`.`delivery` (
  `location_id` INT NOT NULL AUTO_INCREMENT,
  `delivery_name` VARCHAR(10) NOT NULL,
  `latitude` DECIMAL(8,6) NOT NULL,
  `longtitude` DECIMAL(9,6) NOT NULL,
  PRIMARY KEY (`location_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bda`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bda`.`user` (
  `user_id` VARCHAR(20) NOT NULL,
  `pwd` VARCHAR(20) NOT NULL,
  `user_name` VARCHAR(20) NOT NULL,
  `email` VARCHAR(30) NOT NULL,
  `auth` TINYINT(1) NOT NULL DEFAULT 0,
  `view_count` INT NOT NULL DEFAULT 5,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bda`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bda`.`order` (
  `order_id` INT NOT NULL AUTO_INCREMENT,
  `datetime` DATETIME NOT NULL,
  `total` INT NOT NULL,
  `user_id` VARCHAR(20) NOT NULL,
  `location_id` INT NULL,
  PRIMARY KEY (`order_id`),
  INDEX `fk_order_delivery_idx` (`location_id` ASC),
  INDEX `fk_order_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_order_delivery`
    FOREIGN KEY (`location_id`)
    REFERENCES `bda`.`delivery` (`location_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `bda`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bda`.`payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bda`.`payment` (
  `payment_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` VARCHAR(20) NOT NULL,
  `payment_date` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`payment_id`, `user_id`),
  INDEX `fk_payment_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_payment_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `bda`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bda`.`menu`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bda`.`menu` (
  `menu_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` VARCHAR(20) NOT NULL,
  `category` VARCHAR(20) NULL,
  `menu_name` VARCHAR(255) NOT NULL,
  `price` INT NOT NULL,
  PRIMARY KEY (`menu_id`, `user_id`),
  INDEX `fk_menu_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_menu_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `bda`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bda`.`order_detail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bda`.`order_detail` (
  `order_detail_id` INT NOT NULL AUTO_INCREMENT,
  `menu_id` INT NOT NULL,
  `order_id` INT NOT NULL,
  `count` INT NOT NULL,
  PRIMARY KEY (`order_detail_id`),
  INDEX `fk_order_detail_order1_idx` (`order_id` ASC),
  INDEX `fk_order_detail_menu1_idx` (`menu_id` ASC),
  CONSTRAINT `fk_order_detail_order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `bda`.`order` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_detail_menu1`
    FOREIGN KEY (`menu_id`)
    REFERENCES `bda`.`menu` (`menu_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bda`.`time`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bda`.`time` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `order_id` INT NOT NULL,
  `time_zone` CHAR(1) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_time_order1_idx` (`order_id` ASC),
  CONSTRAINT `fk_time_order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `bda`.`order` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bda`.`season`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bda`.`season` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `order_id` INT NOT NULL,
  `season` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_season_order1_idx` (`order_id` ASC),
  CONSTRAINT `fk_season_order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `bda`.`order` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bda`.`date`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bda`.`date` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `order_id` INT NOT NULL,
  `day_of_week` CHAR(3) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_date_order1_idx` (`order_id` ASC),
  CONSTRAINT `fk_date_order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `bda`.`order` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
